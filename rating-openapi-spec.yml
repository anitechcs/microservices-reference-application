openapi: 3.0.2
info:
  title: RatingService API Specification
  description: 'This API server exposes required endpoints for managing book ratings in Microservices reference application.'
  termsOfService: https://www.anitechcs.com/terms-condition/
  contact:
    email: contact@anitechcs.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1.0.0
externalDocs:
  description: Find out more about Microservices reference application
  url: https://github.com/anitechcs/microservices-reference-application
servers:
  - url: 'https://mra-bookstore.tk/v1'
    description: Rating Service production server
tags:
- name: Rating-Service
  description: Rating service enpoints required for Microservices reference application
components:
  schemas:
    Rating:
      type: object
      properties:
        rating:
          description: Average rating
          type: number
          format: float
          maximum: 5
          example: 4.5
        ratingCount:
          description: Total number of rating count
          type: integer
          format: int64
          example: 350
    RatingSuccessResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        ratings:
          $ref: '#/components/schemas/Rating'
    RatingErrorResponse:
      type: object
      properties:
        statusCode:
          description: Non zero error code
          type: integer
          format: int32
        message:
          description: Error message
          type: string
paths:
  /rating/{bookId}:
    description: Rating service
    get:
      tags:
        - Rating-Service
      description: Returns ratings for a particulat book
      operationId: getBookRatings
      parameters:
      - name: bookId
        in: path
        description: Id of book to return ratings
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingSuccessResponse'
        400:
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingErrorResponse'
        404:
          description: No records found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingErrorResponse'

