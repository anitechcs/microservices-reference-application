version: '3'
services:
  postgres_db:
    image: postgres:latest # use latest official postgres version
    container_name: postgres_db
    environment:
      - POSTGRES_DB='bookstore' # database name
      - POSTGRES_USER='postgres' # database admin user
      - POSTGRES_PASSWORD='password' # database admin password
    ports:
      - "5431:5431"
    volumes:
      - postgres_data:/var/lib/postgres
  
  bookservice:
    image: bookservice:latest # use latest official postgres version
    container_name: bookservice
    #environment:
    #  - DB_URL: postgresql://postgres:postgres@postgres_db:5431/bookstore
    ports:
      - "8080:8080"
    links:
      - postgres_db
  
  orderservice:
    image: orderservice:latest # use latest official postgres version
    container_name: orderservice
    #environment:
    #  - DB_URL: postgresql://postgres:postgres@postgres_db:5431/bookstore
    ports:
      - "8081:8080"
    links:
      - postgres_db
    
  ratingservice:
    image: ratingservice:latest # use latest official postgres version
    container_name: ratingservice
    #environment:
    #  - DB_URL: postgresql://postgres:postgres@postgres_db:5431/bookstore
    ports:
      - "8082:8080"
    links:
      - postgres_db
  
  promotionservice:
    image: promotionservice:latest # use latest official postgres version
    container_name: promotionservice
    #environment:
    #  - DB_URL: postgresql://postgres:postgres@postgres_db:5431/bookstore
    ports:
      - "8083:8080"
    links:
      - postgres_db
    
  bookstore:
    image: bookstore:latest # use latest official postgres version
    container_name: bookstore
    #environment:
    #  - DB_URL: postgresql://postgres:postgres@postgres_db:5431/bookstore
    ports:
      - "4200:80"
    links:
      - bookservice
      - orderservice
      - ratingservice
      - promotionservice
volumes:
  postgres_data: # named volumes can be managed easier using docker-compose
